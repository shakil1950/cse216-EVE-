1.Bubble sort ascending order..
#include<stdio.h>

int main()
{
	int i,j,n,temp;
	
	int a[100]={23,8,1,5,8,9,3,2};
	
	for(i=0;i<8;i++)
	{
	for(j=i+1;j<8;j++)
	    {
                                  if(a[i]>a[j])
		{
		    temp=a[i];
                                            a[i]=a[j];
                                             a[j]=temp;
 		}
 	       }

	}
	for(i=0;i<8;i++)
	{
		printf("%d\t",a[i]);
	}
	
	return 0;
}

2. Bubble sort decending order
#include<stdio.h>

int main()
{
	int i,j,n,temp;
	
	int a[100]={23,8,1,5,8,9,3,2};
	
	for(i=0;i<8;i++)
	{
	for(j=i+1;j<8;j++)
	    {
                                  if(a[j]>a[i])
		{
		    temp=a[i];
                                            a[i]=a[j];
                                             a[j]=temp;
 		}
 	       }

	}
	for(i=0;i<8;i++)
	{
		printf("%d\t",a[i]);
	}
	
	return 0;
}

3.Insertion sort ascending order

#include<stdio.h>

int main()
{
	int i,j=0,pos,n=10,temp,max;
	
	int a[100]={23,8,1,5,8,9,3,2};
	int b[100];
	b[0]=a[0];
	for(i=1;i<8;i++)
	{
	j=i-1;
	while(a[i]<b[j] && j>=0)
	{
		b[j+1]=b[j];
		j--;
	}
	b[j+1]=a[i];
	
	}
	
	for(i=0;i<8;i++)
	{
		printf("%d\t",b[i]);
	}
	
	return 0;
}

4.Insertion sort descending order
#include<stdio.h>

int main()
{
	int i,j=0,pos,n=10,temp,max;
	
	int a[100]={23,8,1,5,8,9,3,2};
	int b[100];
	b[0]=a[0];
	for(i=1;i<8;i++)
	{
	j=i-1;
	while(a[i]>b[j] && j>=0)
	{
		b[j+1]=b[j];
		j--;
	}
	b[j+1]=a[i];
	
	}
	
	for(i=0;i<8;i++)
	{
		printf("%d\t",b[i]);
	}
	
	return 0;
}

5. Iterative Linear search

#include<stdio.h>

int main()
{
	int i,j=0,x,flag=0;
	
	int a[100]={23,8,1,5,8,9,3,2};
	printf("Enter search number=");
	scanf("%d",&x);
	for(i=1;i<8;i++)
	{
	if(a[i]==x)
	{
		flag=1;
		break;
	}
	
	}
	if(flag==1)
	{
		printf("\n Data found at index a[%d]",i);
	}
	
	else
	{
		printf("Data not found");
	}
	
	return 0;
}

6. Recursive linear search

#include<stdio.h>

int recur(int a[],int s,int e,int x)
{
	int flag=0;
	if(s>e)
	{
		return -1;
	}
	
	if(a[s]==x)
	{
		return s;
		
	}
	
	recur(a,s+1,e,x);
}

int main()
{
	int i,j=0,x,flag;
	
	int a[100]={23,5,1,3,2,9,3,2};
	printf("Enter search number=");
	scanf("%d",&x);
    flag= recur(a,0,8,x);
    
    if(flag!=-1)
    {
    	printf("Data found  at index[%d]",flag);
    	
	}
	
	else 
	{
		printf("Data not found");
	}
	
	return 0;
}

7. Iterative Binary search

#include <stdio.h>
int main()
{
	int a[6]={10,11,19,25,36,78};
	int mid,f,l,x,flag=0;;
	printf("Enter your search number=");
	scanf("%d",&x);
	f=0;
	l=6;
 
	while(l>f)
	{
	    mid=(f+l)/2; 

		if(a[mid]<x)
		{
			f=mid+1;
		
		}
		
		else if(a[mid]>x)
		{
			l=mid;
		} 
		
		else if(a[mid]==x)
		{
			flag=1;
			break;
		}
	}
	
	if(flag==1)
	{
		printf("Data found ");
	}
	
	else 
	{
		printf("Not Found");
	}
	return 0;
}

8. Binary search using recursion
#include <stdio.h>

int recur(int a[],int s,int e,int x)
{
	
	if(s<=e)
	{
	int mid;
		
	mid=(s+e)/2;
	if (a[mid]<x)
	{
		return recur(a,mid+1,e,x);
	}
	
	else if(a[mid]>x)
	{
		return recur(a,s,mid-1,x);
	}
	
	else
	{
		return mid;
	}
      }
	return -1;
}






int main()
{
	int a[6]={10,11,19,25,36,78};
	int mid,f,l,x,flag;;
	printf("Enter your search number=");
	scanf("%d",&x);
	f=0;
	l=6;

flag=recur(a,f,l,x);
	
	if(flag!= -1)
	{
		printf("Data found  at index a[%d]",flag);
	}
	
	else 
	{
		printf("Not Found");
	}
	return 0;
}
